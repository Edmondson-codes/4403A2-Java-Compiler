// Correct program with array of arrays and procedure call
const
  N = 5;
type
  V = array of int;
  M = array of array of int;
var
  vec: V;
  mat: M;
  i: int;
procedure createvec() =
  var
    j : int;
    vec2 : V;
  begin
       vec2 := new V[N];
       j := 0;
       while j < vec2.length do
       begin
           vec2[j] := j + (i*10);
           j := j+1
       end;
       mat[i] := vec2
  end;

begin
  mat := new M[N];
  i := 0;
  while i < mat.length do
  begin
      call createvec();
      i := i+1
  end ;
  vec := new V[N];
  // the following should print the diagonal elements of mat: 0, 11, 22, 33 and 44
  i := 0;
  while i < mat.length do
  begin
      vec[i] := mat[i][i];
      write vec[i];
      i := i + 1
  end
end